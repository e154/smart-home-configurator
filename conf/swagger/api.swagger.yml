openapi: 3.0.1
info:
  title: Smart home api
  description: This documentation describes APIs found under https://github.com/e154/smart-home
  contact:
    name: Alex Filippov
    url: https://e154.github.io/smart-home/
    email: support@e154.ru
  version: "1.0"
servers:
  - url: /
security:
  - ApiKeyAuth: []
    BasicAuth: []
tags:
  - name: AreaService
  - name: AuthService
  - name: AutomationService
  - name: EntityService
  - name: ImageService
  - name: PluginService
  - name: RoleService
  - name: ScriptService
  - name: StreamService
  - name: UserService
  - name: Zigbee2mqttService
paths:
  /subscribe:
    get:
      tags:
        - StreamService
      summary: stream
      operationId: StreamService_Subscribe
      parameters:
        - name: query
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.(streaming responses)
          content:
            application/json:
              schema:
                title: Stream result of apiSubscribeResponse
                type: object
                properties:
                  result:
                    $ref: '#/components/schemas/apiSubscribeResponse'
                  error:
                    $ref: '#/components/schemas/rpcStatus'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
  /v1/access_list:
    get:
      tags:
        - AuthService
      summary: get user access list object
      operationId: AuthService_AccessList
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiAccessListResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/area:
    post:
      tags:
        - AreaService
      summary: add new area
      operationId: AreaService_AddArea
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewAreaRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiArea'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/area/{id}:
    get:
      tags:
        - AreaService
      summary: get area by id
      operationId: AreaService_GetAreaById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiArea'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - AreaService
      summary: update area
      operationId: AreaService_UpdateArea
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiArea'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - AreaService
      summary: delete area
      operationId: AreaService_DeleteArea
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/areas:
    get:
      tags:
        - AreaService
      summary: get area list
      operationId: AreaService_GetAreaList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetAreaListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/areas/search:
    get:
      tags:
        - AreaService
      summary: search area
      operationId: AreaService_SearchArea
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            format: int64
        - name: offset
          in: query
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSearchAreaResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/entities:
    get:
      tags:
        - EntityService
      summary: get entity list
      operationId: EntityService_GetEntityList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetEntityListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/entity:
    post:
      tags:
        - EntityService
      summary: add new entity
      operationId: EntityService_AddEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewEntityRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/entity/search:
    get:
      tags:
        - EntityService
      summary: search entity
      operationId: EntityService_SearchEntity
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            format: int64
        - name: offset
          in: query
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSearchEntityResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/entity/{id}:
    get:
      tags:
        - EntityService
      summary: get entity
      operationId: EntityService_GetEntity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - EntityService
      summary: update entity
      operationId: EntityService_UpdateEntity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                pluginName:
                  type: string
                description:
                  type: string
                area:
                  $ref: '#/components/schemas/apiUpdateEntityRequestArea'
                icon:
                  type: string
                image:
                  $ref: '#/components/schemas/apiUpdateEntityRequestImage'
                autoLoad:
                  type: boolean
                parent:
                  $ref: '#/components/schemas/apiEntityParent'
                actions:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUpdateEntityRequestAction'
                states:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUpdateEntityRequestState'
                attributes:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/apiAttribute'
                settings:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/apiAttribute'
                scripts:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiScript'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiEntity'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - EntityService
      summary: delete entity
      operationId: EntityService_DeleteEntity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/image:
    post:
      tags:
        - ImageService
      summary: add new image
      operationId: ImageService_AddImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewImageRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/image/upload:
    post:
      tags:
        - ImageService
      summary: upload image
      operationId: ImageService_UploadImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiUploadImageRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/image/{id}:
    get:
      tags:
        - ImageService
      summary: get image by id
      operationId: ImageService_GetImageById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - ImageService
      summary: update image
      operationId: ImageService_UpdateImageById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                thumb:
                  type: string
                image:
                  type: string
                mimeType:
                  type: string
                title:
                  type: string
                size:
                  type: string
                  format: int64
                name:
                  type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiImage'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - ImageService
      summary: delete image by id
      operationId: ImageService_DeleteImageById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/images:
    get:
      tags:
        - ImageService
      summary: get image list
      operationId: ImageService_GetImageList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetImageListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/plugin/{name}/disable:
    post:
      tags:
        - PluginService
      summary: disable plugin
      operationId: PluginService_DisablePlugin
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiDisablePluginResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/plugin/{name}/enable:
    post:
      tags:
        - PluginService
      summary: enable plugin
      operationId: PluginService_EnablePlugin
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiEnablePluginResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/plugin/{name}/options:
    get:
      tags:
        - PluginService
      summary: get plugin options
      operationId: PluginService_GetPluginOptions
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetPluginOptionsResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/plugins:
    get:
      tags:
        - PluginService
      summary: get plugin list
      operationId: PluginService_GetPluginList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetPluginListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/role:
    post:
      tags:
        - RoleService
      summary: add new role
      operationId: RoleService_AddRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewRoleRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiRole'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/role/{name}:
    get:
      tags:
        - RoleService
      summary: get role by name
      operationId: RoleService_GetRoleByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiRole'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - RoleService
      summary: update role
      operationId: RoleService_UpdateRoleByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                parent:
                  type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiRole'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - RoleService
      summary: delete role by name
      operationId: RoleService_DeleteRoleByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/role/{name}/access_list:
    get:
      tags:
        - RoleService
      summary: get role access list
      operationId: RoleService_GetRoleAccessList
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiRoleAccessListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - RoleService
      summary: update role access list
      operationId: RoleService_UpdateRoleAccessList
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accessListDiff:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/UpdateRoleAccessListRequestAccessListDiff'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiRoleAccessListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/roles:
    get:
      tags:
        - RoleService
      summary: get role list
      operationId: RoleService_GetRoleList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetRoleListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/roles/search:
    get:
      tags:
        - RoleService
      summary: delete role by name
      operationId: RoleService_SearchRoleByName
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            format: int64
        - name: offset
          in: query
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSearchRoleListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/script:
    post:
      tags:
        - ScriptService
      summary: add new script
      operationId: ScriptService_AddScript
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewScriptRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiScript'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/script/exec_src:
    post:
      tags:
        - ScriptService
      summary: exec src script by id
      operationId: ScriptService_ExecSrcScriptById
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiExecSrcScriptRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiExecScriptResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/script/{id}:
    get:
      tags:
        - ScriptService
      summary: get script by id
      operationId: ScriptService_GetScriptById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiScript'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - ScriptService
      summary: update script
      operationId: ScriptService_UpdateScriptById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string
                name:
                  type: string
                source:
                  type: string
                description:
                  type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiScript'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - ScriptService
      summary: delete script by id
      operationId: ScriptService_DeleteScriptById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/script/{id}/copy:
    post:
      tags:
        - ScriptService
      summary: copy script by id
      operationId: ScriptService_CopyScriptById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiScript'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/script/{id}/exec:
    post:
      tags:
        - ScriptService
      summary: exec script by id
      operationId: ScriptService_ExecScriptById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiExecScriptResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/scripts:
    get:
      tags:
        - ScriptService
      summary: get script list
      operationId: ScriptService_GetScriptList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetScriptListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/scripts/search:
    get:
      tags:
        - ScriptService
      summary: delete script by id
      operationId: ScriptService_SearchScript
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            format: int64
        - name: offset
          in: query
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSearchScriptListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/signin:
    post:
      tags:
        - AuthService
      summary: sign in user
      operationId: AuthService_Signin
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSigninResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - BasicAuth: []
  /v1/signout:
    post:
      tags:
        - AuthService
      summary: sign out user
      operationId: AuthService_Signout
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/task:
    post:
      tags:
        - AutomationService
      summary: add new task
      operationId: AutomationService_AddTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewTaskRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTask'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/task/{id}:
    get:
      tags:
        - AutomationService
      summary: get task
      operationId: AutomationService_GetTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTask'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - AutomationService
      summary: update task
      operationId: AutomationService_UpdateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                enabled:
                  type: boolean
                condition:
                  $ref: '#/components/schemas/apiUpdateTaskRequestConditionEnum'
                triggers:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUpdateTaskRequestTrigger'
                conditions:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUpdateTaskRequestCondition'
                actions:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUpdateTaskRequestAction'
                area:
                  $ref: '#/components/schemas/apiArea'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiTask'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - AutomationService
      summary: delete task
      operationId: AutomationService_DeleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/tasks:
    get:
      tags:
        - AutomationService
      summary: get task list
      operationId: AutomationService_GetTaskList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetTaskListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/user:
    post:
      tags:
        - UserService
      summary: add new user
      operationId: UserService_AddUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewtUserRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiUserFull'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/user/{id}:
    get:
      tags:
        - UserService
      summary: get user by id
      operationId: UserService_GetUserById
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiUserFull'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    put:
      tags:
        - UserService
      summary: update user by id
      operationId: UserService_UpdateUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                password:
                  type: string
                passwordRepeat:
                  type: string
                email:
                  type: string
                status:
                  type: string
                lang:
                  type: string
                image:
                  $ref: '#/components/schemas/apiUpdateUserRequestImage'
                role:
                  $ref: '#/components/schemas/apiUpdateUserRequestRole'
                meta:
                  type: array
                  items:
                    $ref: '#/components/schemas/apiUserMeta'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiUserFull'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
        - UserService
      summary: delete user by id
      operationId: UserService_DeleteUserById
      parameters:
        - name: id
          in: path
          description: user id
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/users:
    get:
      tags:
        - UserService
      summary: get user list
      operationId: UserService_GetUserList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetUserListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/zigbee2mqtt/bridge:
    get:
      tags:
        - Zigbee2mqttService
      summary: get bridge list
      operationId: Zigbee2mqttService_GetBridgeList
      parameters:
        - name: page
          in: query
          schema:
            type: string
            format: uint64
        - name: limit
          in: query
          schema:
            type: string
            format: uint64
        - name: sort
          in: query
          schema:
            type: string
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiGetBridgeListResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    post:
      tags:
        - Zigbee2mqttService
      summary: add new bridge
      operationId: Zigbee2mqttService_AddZigbee2mqttBridge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiNewZigbee2mqttRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiZigbee2mqtt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/zigbee2mqtt/bridge/{id}:
    get:
      tags:
        - Zigbee2mqttService
      summary: get bridge
      operationId: Zigbee2mqttService_GetZigbee2mqttBridge
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiZigbee2mqtt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    delete:
      tags:
        - Zigbee2mqttService
      summary: delete bridge by id
      operationId: Zigbee2mqttService_DeleteBridgeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/zigbee2mqtt/bridge/{id}/bridge:
    put:
      tags:
        - Zigbee2mqttService
      summary: update bridge by id
      operationId: Zigbee2mqttService_UpdateBridgeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                login:
                  type: string
                password:
                  type: string
                permitJoin:
                  type: boolean
                baseTopic:
                  type: string
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiZigbee2mqtt'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/zigbee2mqtt/bridge/{id}/networkmap:
    get:
      tags:
        - Zigbee2mqttService
      summary: networkmap
      operationId: Zigbee2mqttService_Networkmap
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiNetworkmapResponse'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
    post:
      tags:
        - Zigbee2mqttService
      summary: update networkmap
      operationId: Zigbee2mqttService_UpdateNetworkmap
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/zigbee2mqtt/bridge/{id}/reset:
    post:
      tags:
        - Zigbee2mqttService
      summary: reset bridge by id
      operationId: Zigbee2mqttService_ResetBridgeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
  /v1/zigbee2mqtt/device_ban:
    post:
      tags:
        - Zigbee2mqttService
      summary: device ban
      operationId: Zigbee2mqttService_DeviceBan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeviceBanRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/zigbee2mqtt/device_rename:
    post:
      tags:
        - Zigbee2mqttService
      summary: device rename
      operationId: Zigbee2mqttService_DeviceRename
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeviceRenameRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/zigbee2mqtt/device_whitelist:
    post:
      tags:
        - Zigbee2mqttService
      summary: device whitelist
      operationId: Zigbee2mqttService_DeviceWhitelist
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/apiDeviceWhitelistRequest'
        required: true
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
      x-codegen-request-body-name: body
  /v1/zigbee2mqtt/search_device:
    get:
      tags:
        - Zigbee2mqttService
      summary: search device
      operationId: Zigbee2mqttService_SearchDevice
      parameters:
        - name: query
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
            format: int64
        - name: offset
          in: query
          schema:
            type: string
            format: int64
      responses:
        200:
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiSearchDeviceResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      security:
        - ApiKeyAuth: []
components:
  schemas:
    AccessListListOfString:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
    SubscribeResponseEvent:
      type: object
      properties:
        key:
          type: string
        events:
          type: array
          items:
            type: string
    UpdateRoleAccessListRequestAccessListDiff:
      type: object
      properties:
        items:
          type: object
          additionalProperties:
            type: boolean
    apiAccessItem:
      type: object
      properties:
        actions:
          type: array
          items:
            type: string
        method:
          type: string
        description:
          type: string
        roleName:
          type: string
    apiAccessLevels:
      type: object
      properties:
        items:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAccessItem'
    apiAccessList:
      type: object
      properties:
        levels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAccessLevels'
    apiAccessListResponse:
      type: object
      properties:
        accessList:
          $ref: '#/components/schemas/apiAccessList'
    apiAction:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        taskId:
          type: string
          format: int64
        script:
          $ref: '#/components/schemas/apiScript'
    apiArea:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        description:
          type: string
    apiAttribute:
      type: object
      properties:
        name:
          type: string
        type:
          $ref: '#/components/schemas/apiTypes'
        int:
          type: string
          format: int64
        string:
          type: string
        bool:
          type: boolean
        float:
          type: number
          format: float
        array:
          type: array
          items:
            $ref: '#/components/schemas/apiAttribute'
    apiCurrentUser:
      type: object
      properties:
        id:
          type: string
          format: int64
        nickname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        status:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/apiUserHistory'
        image:
          $ref: '#/components/schemas/apiImage'
        signInCount:
          type: string
          format: int64
        meta:
          type: array
          items:
            $ref: '#/components/schemas/apiUserMeta'
        role:
          $ref: '#/components/schemas/apiRole'
        lang:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        currentSignInAt:
          type: string
          format: date-time
        lastSignInAt:
          type: string
          format: date-time
    apiDeviceBanRequest:
      type: object
      properties:
        id:
          type: string
          format: int64
        friendlyName:
          type: string
    apiDeviceRenameRequest:
      type: object
      properties:
        friendlyName:
          type: string
        newName:
          type: string
    apiDeviceWhitelistRequest:
      type: object
      properties:
        id:
          type: string
          format: int64
        friendlyName:
          type: string
    apiDisablePluginResult:
      type: object
    apiEnablePluginResult:
      type: object
    apiEntity:
      type: object
      properties:
        id:
          type: string
        pluginName:
          type: string
        description:
          type: string
        area:
          $ref: '#/components/schemas/apiArea'
        image:
          $ref: '#/components/schemas/apiImage'
        icon:
          type: string
        autoLoad:
          type: boolean
        parent:
          $ref: '#/components/schemas/apiEntityParent'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/apiEntityAction'
        states:
          type: array
          items:
            $ref: '#/components/schemas/apiEntityState'
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/apiScript'
        attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        settings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiEntityAction:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiImage'
        script:
          $ref: '#/components/schemas/apiScript'
        type:
          type: string
    apiEntityParent:
      type: object
      properties:
        id:
          type: string
    apiEntityShort:
      type: object
      properties:
        id:
          type: string
        pluginName:
          type: string
        description:
          type: string
        area:
          $ref: '#/components/schemas/apiArea'
        image:
          $ref: '#/components/schemas/apiImage'
        icon:
          type: string
        autoLoad:
          type: boolean
        parent:
          $ref: '#/components/schemas/apiEntityParent'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiEntityState:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiImage'
        style:
          type: string
    apiExecScriptResult:
      type: object
      properties:
        result:
          type: string
    apiExecSrcScriptRequest:
      type: object
      properties:
        lang:
          type: string
        name:
          type: string
        source:
          type: string
        description:
          type: string
    apiGetAreaListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiArea'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetBridgeListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiZigbee2mqttShort'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetEntityListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiEntity'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetImageListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiImage'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetPluginListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiPlugin'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetPluginOptionsResult:
      type: object
      properties:
        triggers:
          type: boolean
        actors:
          type: boolean
        actorCustomAttrs:
          type: boolean
        actorAttrs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        actorCustomActions:
          type: boolean
        actorActions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiGetPluginOptionsResultEntityAction'
        actorCustomStates:
          type: boolean
        actorStates:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiGetPluginOptionsResultEntityState'
        actorSetts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        setts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
    apiGetPluginOptionsResultEntityAction:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        icon:
          type: string
    apiGetPluginOptionsResultEntityState:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
        icon:
          type: string
    apiGetRoleListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiRole'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetScriptListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiScript'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetTaskListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiTask'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiGetUserListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiUserShot'
        meta:
          $ref: '#/components/schemas/apiMeta'
    apiImage:
      type: object
      properties:
        id:
          type: string
          format: int64
        thumb:
          type: string
        url:
          type: string
        image:
          type: string
        mimeType:
          type: string
        title:
          type: string
        size:
          type: string
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
    apiMeta:
      type: object
      properties:
        limit:
          type: string
          format: uint64
        page:
          type: string
          format: uint64
        total:
          type: string
          format: uint64
        sort:
          type: string
    apiNetworkmapResponse:
      type: object
      properties:
        networkmap:
          type: string
    apiNewAreaRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    apiNewEntityRequest:
      type: object
      properties:
        name:
          type: string
        pluginName:
          type: string
        description:
          type: string
        area:
          $ref: '#/components/schemas/apiNewEntityRequestArea'
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiNewEntityRequestImage'
        autoLoad:
          type: boolean
        parent:
          $ref: '#/components/schemas/apiEntityParent'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/apiNewEntityRequestAction'
        states:
          type: array
          items:
            $ref: '#/components/schemas/apiNewEntityRequestState'
        attributes:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        settings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/apiScript'
    apiNewEntityRequestAction:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiNewEntityRequestImage'
        script:
          $ref: '#/components/schemas/apiNewEntityRequestActionScript'
        type:
          type: string
    apiNewEntityRequestActionScript:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiNewEntityRequestArea:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiNewEntityRequestImage:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiNewEntityRequestState:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiNewEntityRequestImage'
        style:
          type: string
    apiNewImageRequest:
      type: object
      properties:
        thumb:
          type: string
        image:
          type: string
        mimeType:
          type: string
        title:
          type: string
        size:
          type: string
          format: int64
        name:
          type: string
    apiNewRoleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parent:
          type: string
    apiNewScriptRequest:
      type: object
      properties:
        lang:
          type: string
        name:
          type: string
        source:
          type: string
        description:
          type: string
    apiNewTaskRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        condition:
          $ref: '#/components/schemas/apiNewTaskRequestConditionEnum'
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/apiNewTaskRequestTrigger'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/apiNewTaskRequestCondition'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/apiNewTaskRequestAction'
        area:
          $ref: '#/components/schemas/apiArea'
    apiNewTaskRequestAction:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        scriptId:
          type: string
          format: int64
    apiNewTaskRequestCondition:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        scriptId:
          type: string
          format: int64
    apiNewTaskRequestConditionEnum:
      type: string
      default: OR
      enum:
        - OR
        - AND
    apiNewTaskRequestTrigger:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        entityId:
          type: string
        scriptId:
          type: string
          format: int64
        pluginName:
          type: string
        payload:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
    apiNewZigbee2mqttRequest:
      type: object
      properties:
        name:
          type: string
        login:
          type: string
        password:
          type: string
        permitJoin:
          type: boolean
        baseTopic:
          type: string
    apiNewtUserRequest:
      type: object
      properties:
        nickname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
        passwordRepeat:
          type: string
        email:
          type: string
        status:
          type: string
        lang:
          type: string
        image:
          $ref: '#/components/schemas/apiNewtUserRequestImage'
        role:
          $ref: '#/components/schemas/apiNewtUserRequestRole'
        meta:
          type: array
          items:
            $ref: '#/components/schemas/apiUserMeta'
    apiNewtUserRequestImage:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiNewtUserRequestRole:
      type: object
      properties:
        name:
          type: string
    apiPlugin:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        enabled:
          type: boolean
        system:
          type: boolean
        settings:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
    apiRole:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/apiRole'
        name:
          type: string
        description:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/apiRole'
        accessList:
          $ref: '#/components/schemas/apiRoleAccessList'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiRoleAccessList:
      type: object
      properties:
        levels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessListListOfString'
    apiRoleAccessListResult:
      type: object
      properties:
        levels:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAccessLevels'
    apiScript:
      type: object
      properties:
        id:
          type: string
          format: int64
        lang:
          type: string
        name:
          type: string
        source:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiSearchAreaResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiArea'
    apiSearchDeviceResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiZigbee2mqttDevice'
    apiSearchEntityResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiEntityShort'
    apiSearchRoleListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiRole'
    apiSearchScriptListResult:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/apiScript'
    apiSigninResponse:
      type: object
      properties:
        currentUser:
          $ref: '#/components/schemas/apiCurrentUser'
        accessToken:
          type: string
    apiSubscribeResponse:
      type: object
      properties:
        query:
          type: string
        data:
          type: object
          properties: {}
        events:
          type: array
          items:
            $ref: '#/components/schemas/SubscribeResponseEvent'
    apiTask:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        condition:
          $ref: '#/components/schemas/apiTaskCondition'
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/apiTrigger'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/apiTaskCondition'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/apiAction'
        area:
          $ref: '#/components/schemas/apiArea'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiTaskCondition:
      type: string
      default: OR
      enum:
        - OR
        - AND
    apiTrigger:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        taskId:
          type: string
          format: int64
        entityId:
          type: string
        script:
          $ref: '#/components/schemas/apiScript'
        pluginName:
          type: string
        payload:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
    apiTypes:
      type: string
      default: INT
      enum:
        - INT
        - STRING
        - FLOAT
        - BOOL
        - ARRAY
    apiUpdateEntityRequestAction:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiUpdateEntityRequestImage'
        script:
          $ref: '#/components/schemas/apiUpdateEntityRequestActionScript'
        type:
          type: string
    apiUpdateEntityRequestActionScript:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiUpdateEntityRequestArea:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiUpdateEntityRequestImage:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiUpdateEntityRequestState:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        image:
          $ref: '#/components/schemas/apiUpdateEntityRequestImage'
        style:
          type: string
    apiUpdateTaskRequestAction:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        scriptId:
          type: string
          format: int64
    apiUpdateTaskRequestCondition:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        scriptId:
          type: string
          format: int64
    apiUpdateTaskRequestConditionEnum:
      type: string
      default: OR
      enum:
        - OR
        - AND
    apiUpdateTaskRequestTrigger:
      type: object
      properties:
        name:
          type: string
        taskId:
          type: string
          format: int64
        entityId:
          type: string
        scriptId:
          type: string
          format: int64
        pluginName:
          type: string
        payload:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/apiAttribute'
    apiUpdateUserRequestImage:
      type: object
      properties:
        id:
          type: string
          format: int64
    apiUpdateUserRequestRole:
      type: object
      properties:
        name:
          type: string
    apiUploadImageRequest:
      type: object
      properties:
        body:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: byte
    apiUserFull:
      type: object
      properties:
        id:
          type: string
          format: int64
        nickname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        status:
          type: string
        history:
          type: array
          items:
            $ref: '#/components/schemas/apiUserHistory'
        image:
          $ref: '#/components/schemas/apiImage'
        signInCount:
          type: string
          format: int64
        meta:
          type: array
          items:
            $ref: '#/components/schemas/apiUserMeta'
        role:
          $ref: '#/components/schemas/apiRole'
        roleName:
          type: string
        lang:
          type: string
        authenticationToken:
          type: string
        currentSignInIp:
          type: string
        lastSignInIp:
          type: string
        user:
          $ref: '#/components/schemas/apiUserFullParent'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        currentSignInAt:
          type: string
          format: date-time
        lastSignInAt:
          type: string
          format: date-time
        resetPasswordSentAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
    apiUserFullParent:
      type: object
      properties:
        id:
          type: string
          format: int64
        nickname:
          type: string
    apiUserHistory:
      type: object
      properties:
        ip:
          type: string
        time:
          type: string
          format: date-time
    apiUserMeta:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    apiUserShot:
      type: object
      properties:
        id:
          type: string
          format: int64
        nickname:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        status:
          type: string
        image:
          $ref: '#/components/schemas/apiImage'
        lang:
          type: string
        role:
          $ref: '#/components/schemas/apiRole'
        roleName:
          type: string
        user:
          $ref: '#/components/schemas/apiUserShotParent'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiUserShotParent:
      type: object
      properties:
        id:
          type: string
          format: int64
        nickname:
          type: string
    apiZigbee2mqtt:
      type: object
      properties:
        scanInProcess:
          type: boolean
        lastScan:
          type: string
          format: date-time
        networkmap:
          type: string
        status:
          type: string
        id:
          type: string
          format: int64
        name:
          type: string
        login:
          type: string
        permitJoin:
          type: boolean
        baseTopic:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiZigbee2mqttDevice:
      type: object
      properties:
        id:
          type: string
        zigbee2mqttId:
          type: string
          format: int64
        name:
          type: string
        type:
          type: string
        model:
          type: string
        description:
          type: string
        manufacturer:
          type: string
        functions:
          type: array
          items:
            type: string
        imageUrl:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    apiZigbee2mqttShort:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
        login:
          type: string
        permitJoin:
          type: boolean
        baseTopic:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
          description: |-
            A URL/resource name that uniquely identifies the type of the serialized
            protocol buffer message. This string must contain at least
            one "/" character. The last segment of the URL's path must represent
            the fully qualified name of the type (as in
            `path/google.protobuf.Duration`). The name should be in a canonical form
            (e.g., leading "." is not accepted).

            In practice, teams usually precompile into the binary all types that they
            expect it to use in the context of Any. However, for URLs which use the
            scheme `http`, `https`, or no scheme, one can optionally set up a type
            server that maps type URLs to message definitions as follows:

            * If no scheme is provided, `https` is assumed.
            * An HTTP GET on the URL must yield a [google.protobuf.Type][]
              value in binary format, or produce an error.
            * Applications are allowed to cache lookup results based on the
              URL, or have them precompiled into a binary to avoid any
              lookup. Therefore, binary compatibility needs to be preserved
              on changes to types. (Use versioned type names to manage
              breaking changes.)

            Note: this functionality is not currently available in the official
            protobuf release, and it is not used for type URLs beginning with
            type.googleapis.com.

            Schemes other than `http`, `https` (or the empty scheme) might be
            used with implementation specific semantics.
        value:
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          description: Must be a valid serialized protocol buffer of the above specified
            type.
          format: byte
      description: |-
        `Any` contains an arbitrary serialized protocol buffer message along with a
        URL that describes the type of the serialized message.

        Protobuf library provides support to pack/unpack Any values in the form
        of utility functions or additional generated methods of the Any type.

        Example 1: Pack and unpack a message in C++.

            Foo foo = ...;
            Any any;
            any.PackFrom(foo);
            ...
            if (any.UnpackTo(&foo)) {
              ...
            }

        Example 2: Pack and unpack a message in Java.

            Foo foo = ...;
            Any any = Any.pack(foo);
            ...
            if (any.is(Foo.class)) {
              foo = any.unpack(Foo.class);
            }

         Example 3: Pack and unpack a message in Python.

            foo = Foo(...)
            any = Any()
            any.Pack(foo)
            ...
            if any.Is(Foo.DESCRIPTOR):
              any.Unpack(foo)
              ...

         Example 4: Pack and unpack a message in Go

             foo := &pb.Foo{...}
             any, err := anypb.New(foo)
             if err != nil {
               ...
             }
             ...
             foo := &pb.Foo{}
             if err := any.UnmarshalTo(foo); err != nil {
               ...
             }

        The pack methods provided by protobuf library will by default use
        'type.googleapis.com/full.type.name' as the type URL and the unpack
        methods only use the fully qualified type name after the last '/'
        in the type URL, for example "foo.bar.com/x/y.z" will yield type
        name "y.z".


        JSON
        ====
        The JSON representation of an `Any` value uses the regular
        representation of the deserialized, embedded message, with an
        additional field `@type` which contains the type URL. Example:

            package google.profile;
            message Person {
              string first_name = 1;
              string last_name = 2;
            }

            {
              "@type": "type.googleapis.com/google.profile.Person",
              "firstName": <string>,
              "lastName": <string>
            }

        If the embedded message type is well-known and has a custom JSON
        representation, that representation will be embedded adding a field
        `value` which holds the custom JSON in addition to the `@type`
        field. Example (for message [google.protobuf.Duration][]):

            {
              "@type": "type.googleapis.com/google.protobuf.Duration",
              "value": "1.212s"
            }
    protobufNullValue:
      type: string
      description: |-
        `NullValue` is a singleton enumeration to represent the null value for the
        `Value` type union.

         The JSON representation for `NullValue` is JSON `null`.

         - NULL_VALUE: Null value.
      default: NULL_VALUE
      enum:
        - NULL_VALUE
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-api-key
      in: header
      x-api-key: jwt
    BasicAuth:
      type: http
      scheme: basic
